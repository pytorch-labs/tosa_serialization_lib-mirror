// Copyright (c) 2024, ARM Limited.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//         http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

/*
  Syntax:
    DEF_OP(OP, INPUT_TYPE...)

  Description:
    OP: operator name, must match corresponding "enum Op" names in tosa.fbs
    INPUT_TYPE: "TENSOR", "TENSOR_LIST", "SHAPE" or "SHAPE_LIST"
*/

// Tensor Operators
DEF_OP(ARGMAX, TENSOR)
DEF_OP(AVG_POOL2D, TENSOR)
DEF_OP(CONV2D, TENSOR, TENSOR, TENSOR)
DEF_OP(CONV3D, TENSOR, TENSOR, TENSOR)
DEF_OP(DEPTHWISE_CONV2D, TENSOR, TENSOR, TENSOR)
DEF_OP(FFT2D, TENSOR, TENSOR)
DEF_OP(MATMUL, TENSOR, TENSOR)
DEF_OP(MAX_POOL2D, TENSOR)
DEF_OP(RFFT2D, TENSOR)
DEF_OP(TRANSPOSE_CONV2D, TENSOR, TENSOR, TENSOR)
// Activation Functions
DEF_OP(CLAMP, TENSOR)
DEF_OP(ERF, TENSOR)
DEF_OP(SIGMOID, TENSOR)
DEF_OP(TANH, TENSOR)
// Elementwise Binary Operators
DEF_OP(ADD, TENSOR, TENSOR)
DEF_OP(ARITHMETIC_RIGHT_SHIFT, TENSOR, TENSOR)
DEF_OP(BITWISE_AND, TENSOR, TENSOR)
DEF_OP(BITWISE_OR, TENSOR, TENSOR)
DEF_OP(BITWISE_XOR, TENSOR, TENSOR)
DEF_OP(INTDIV, TENSOR, TENSOR)
DEF_OP(LOGICAL_AND, TENSOR, TENSOR)
DEF_OP(LOGICAL_LEFT_SHIFT, TENSOR, TENSOR)
DEF_OP(LOGICAL_RIGHT_SHIFT, TENSOR, TENSOR)
DEF_OP(LOGICAL_OR, TENSOR, TENSOR)
DEF_OP(LOGICAL_XOR, TENSOR, TENSOR)
DEF_OP(MAXIMUM, TENSOR, TENSOR)
DEF_OP(MINIMUM, TENSOR, TENSOR)
DEF_OP(MUL, TENSOR, TENSOR, TENSOR)
DEF_OP(POW, TENSOR, TENSOR)
DEF_OP(SUB, TENSOR, TENSOR)
DEF_OP(TABLE, TENSOR, TENSOR)
// Elementwise Unary Operators
DEF_OP(ABS, TENSOR)
DEF_OP(BITWISE_NOT, TENSOR)
DEF_OP(CEIL, TENSOR)
DEF_OP(CLZ, TENSOR)
DEF_OP(COS, TENSOR)
DEF_OP(EXP, TENSOR)
DEF_OP(FLOOR, TENSOR)
DEF_OP(LOG, TENSOR)
DEF_OP(LOGICAL_NOT, TENSOR)
DEF_OP(NEGATE, TENSOR)
DEF_OP(RECIPROCAL, TENSOR)
DEF_OP(RSQRT, TENSOR)
DEF_OP(SIN, TENSOR)
// Elementwise Ternary Operators
DEF_OP(SELECT, TENSOR, TENSOR, TENSOR)
// Comparison Operators
DEF_OP(EQUAL, TENSOR, TENSOR)
DEF_OP(GREATER, TENSOR, TENSOR)
DEF_OP(GREATER_EQUAL, TENSOR, TENSOR)
// Reduction Operators
DEF_OP(REDUCE_ALL, TENSOR)
DEF_OP(REDUCE_ANY, TENSOR)
DEF_OP(REDUCE_MAX, TENSOR)
DEF_OP(REDUCE_MIN, TENSOR)
DEF_OP(REDUCE_PRODUCT, TENSOR)
DEF_OP(REDUCE_SUM, TENSOR)
// Data Layout
DEF_OP(CONCAT, TENSOR_LIST)
DEF_OP(PAD, TENSOR, SHAPE)
DEF_OP(RESHAPE, TENSOR, SHAPE)
DEF_OP(REVERSE, TENSOR)
DEF_OP(SLICE, TENSOR, SHAPE, SHAPE)
DEF_OP(TILE, TENSOR, SHAPE)
DEF_OP(TRANSPOSE, TENSOR)
// Scatter/Gather Operators
DEF_OP(GATHER, TENSOR, TENSOR)
DEF_OP(SCATTER, TENSOR, TENSOR, TENSOR)
// Image Operators
DEF_OP(RESIZE, TENSOR, SHAPE, SHAPE, SHAPE)
// Type Conversion
DEF_OP(CAST, TENSOR)
DEF_OP(CAST_STOCHASTIC, TENSOR)
DEF_OP(RESCALE, TENSOR, TENSOR, TENSOR)
// Data Nodes
DEF_OP(CONST)
DEF_OP(RAND_SEED, TENSOR, SHAPE)
DEF_OP(RAND_UNIFORM, TENSOR, SHAPE)
DEF_OP(IDENTITY, TENSOR)
// Custom Operators
DEF_OP(CUSTOM, TENSOR_LIST)
// Control Flow Operators
DEF_OP(COND_IF, TENSOR_LIST)
DEF_OP(WHILE_LOOP, TENSOR_LIST)
DEF_OP(YIELD)
// Variable Operators
DEF_OP(VARIABLE)
DEF_OP(VARIABLE_WRITE, TENSOR)
DEF_OP(VARIABLE_READ)
// Shape Operators
DEF_OP(CONST_SHAPE)
